
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<organization>
		<name>Gregory Graham</name>
	</organization>
 
	<groupId>nz.co.gregs</groupId>
	<artifactId>dbvolution10</artifactId>
	<version>0.9.3-SNAPSHOT</version>
	<packaging>jar</packaging>
    
	<name>DBvolution 10</name>
	<description>
		Advanced Library to Remove Object Relational Impedance. 
		DBvolution translates all database concepts into Object Oriented concepts, allowing you to spend all your time writing Java rather than fixing broken and awkward SQL.
		DBvolution transforms your schema into classes, reduces the database configuration to sparse annotations on the classes, and allows querying directly from the classes.
		Queries are created inside your java code and takes as little as one line for a multi-table outer join. Retrieving the rows from the query is only one more method call. Dozens of SQL functions are available without leaving your Java code and use chaining to build complex expressions easily.
		Transactions are encapsulated into a thread-like API, allowing you to write complex database interactions in complete safety.
		The queries performed by DBvolution are always available for debugging and checking by DBAs before release.
		There are examples in nz.co.gregs.dbvolution.examples, and documentation at http://dbvolution.gregs.co.nz.
	</description>
	<url>http://dbvolution.gregs.co.nz</url>
	<licenses>
		<license>
			<name>Commercial License</name>
			<comments>Commercial licenses and support are available. Check https://dbvolution.com/licensing.html for details.</comments>
		</license>
		<license>
			<name>Non-commercial License</name>
			<url>https://dbvolution.com/noncommercial_license.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:https://github.com/gregorydgraham/DBvolution10.git</connection>
		<developerConnection>scm:git:https://github.com/gregorydgraham/DBvolution10.git</developerConnection>
		<url>https://github.com/gregorydgraham/DBvolution10.git</url>
		<tag>HEAD</tag>
	</scm>
	<developers>
		<developer>
			<name>Gregory Graham</name>
			<email>gregory@gregs.co.nz</email>
			<organization>Greg's</organization>
			<roles>
				<role>architect</role>
				<role>developer</role>
				<role>software engineer</role>
			</roles>
			<timezone>+12</timezone>
			<organizationUrl>https://www.gregs.co.nz</organizationUrl>
			<url>https://www.gregs.co.nz/gregory/</url>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Malcolm Lett</name>
			<roles>
				<role>architect</role>
				<role>developer</role>
				<role>software engineer</role>
			</roles>
			<timezone>+12</timezone>
		</contributor>
		<contributor>			
			<name>Gregory Graham</name>
			<email>gregory@gregs.co.nz</email>
			<organization>Greg's</organization>
			<roles>
				<role>architect</role>
				<role>developer</role>
				<role>software engineer</role>
			</roles>
			<timezone>+12</timezone>
			<organizationUrl>https://www.gregs.co.nz</organizationUrl>
			<url>https://www.gregs.co.nz/gregory/</url>
		</contributor>
	</contributors>
    
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>
        
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<libDirectory>${basedir}/lib</libDirectory>
		<argLine />
	</properties>
	    
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.22.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<additionalOptions>-html5</additionalOptions>
				</configuration>
				<version>3.0.1</version>
				<reportSets>
					<reportSet><!-- by default, id = "default" -->
						<reports><!-- select non-aggregate reports -->
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet><!-- aggregate reportSet, to define in poms having modules -->
						<id>aggregate</id>
						<inherited>false</inherited><!-- don't run aggregate in child modules -->
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin> 
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>3.1.12</version>
				<!--				<dependencies>
					 overwrite dependency on spotbugs if you want to specify the version of spotbugs 
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>4.0.0-beta2</version>
					</dependency>
				</dependencies>-->
				<!--				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.5</version>
				<configuration>
					<effort>Max</effort>
				</configuration>-->
			</plugin>
		</plugins>
	</reporting>
	
	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>3.3.1</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>3.1.12</version>
				<configuration>
					<additionalOptions>-html5</additionalOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<additionalOptions>-html5</additionalOptions>
				</configuration>
			</plugin>     
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<haltOnFailure>false</haltOnFailure>
							<rules>
								<!-- implementation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>METHOD</element>
									<excludes>
										<exclude>*databases*</exclude>
										<exclude>*internal*</exclude>
										<exclude>*exceptions*</exclude>
										<exclude>*QueryGraphVisualisationTest</exclude>
										<exclude>*DBExtractor</exclude>
										<exclude>xFunc</exclude>
									</excludes>
									<limits><!-- implementation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.10</minimum>
										</limit>
									</limits>
								</rule>
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>CLASS</element>
									<excludes>
										<exclude>*databases*</exclude>
										<exclude>*internal*</exclude>
										<exclude>*exceptions*</exclude>
										<exclude>*QueryGraphVisualisationTest</exclude>
										<exclude>*DBExtractor</exclude>
										<exclude>*DBByteArray</exclude><!-- Deprecated class does not need testing -->
									</excludes>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.23</minimum>
										</limit>
									</limits>
								</rule>
								<!-- implementation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>PACKAGE</element>
									<excludes>
										<exclude>*databases*</exclude>
										<exclude>*internal*</exclude>
										<exclude>*exceptions*</exclude>
										<exclude>*QueryGraphVisualisationTest</exclude>
										<exclude>*DBExtractor</exclude>
									</excludes>
									<limits><!-- implementation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.20</minimum>
										</limit>
									</limits>
								</rule>
								<!-- implementation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<excludes>
										<exclude>*databases*</exclude>
										<exclude>*internal*</exclude>
										<exclude>*exceptions*</exclude>
										<exclude>*QueryGraphVisualisationTest</exclude>
										<exclude>*DBExtractor</exclude>
									</excludes>
									<limits><!-- implementation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.10</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.8</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<release>release</release> 
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>10</source>
					<target>10</target>
					<compilerArgs>
						<arg>-Xlint</arg>
					</compilerArgs>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<argLine>-Dfile.encoding=UTF8 @{argLine}</argLine>
					<includes>
						<include>**/*.java</include>
					</includes>
					<threadCount>1</threadCount>
					<forkCount>1</forkCount>
					<systemPropertyVariables>
						<sqlite.url>${sqlite.url}</sqlite.url>
						<sqlite.filename>${sqlite.filename}</sqlite.filename>
						<sqlite.host />
						<sqlite.port />
						<sqlite.instance />
						<sqlite.username>${sqlite.username}</sqlite.username>
						<sqlite.password>${sqlite.password}</sqlite.password>
						<sqlite.schema />	
						<sqlite.extras>${sqlite.extras}</sqlite.extras>
                        							
						<h2.url>${h2.url}</h2.url>
						<h2.host>${h2.host}</h2.host>
						<h2.port>${h2.port}</h2.port>
						<h2.instance>${h2.instance}</h2.instance>
						<h2.username>${h2.username}</h2.username>
						<h2.password>${h2.password}</h2.password>
						<h2.schema>${h2.schema}</h2.schema>
						<h2.extras>${h2.extras}</h2.extras>
                        
						<h2file.url>${h2file.url}</h2file.url>
						<h2file.host>${h2file.host}</h2file.host>
						<h2file.port>${h2file.port}</h2file.port>
						<h2file.database>${h2file.database}</h2file.database>
						<h2file.instance>${h2file.instance}</h2file.instance>
						<h2file.username>${h2file.username}</h2file.username>
						<h2file.password>${h2file.password}</h2file.password>
						<h2file.schema>${h2file.schema}</h2file.schema>
						<h2file.file>${h2file.file}</h2file.file>
						<h2file.extras>${h2file.extras}</h2file.extras>
					
						<h2datasource.url>${h2datasource.url}</h2datasource.url>
						<h2datasource.host>${h2datasource.host}</h2datasource.host>
						<h2datasource.port>${h2datasource.port}</h2datasource.port>
						<h2datasource.instance>${h2datasource.instance}</h2datasource.instance>
						<h2datasource.username>${h2datasource.username}</h2datasource.username>
						<h2datasource.password>${h2datasource.password}</h2datasource.password>
						<h2datasource.schema>${h2datasource.schema}</h2datasource.schema>
						<h2datasource.extras>${h2datasource.extras}</h2datasource.extras>
                        
						<h2memory.url>${h2memory.url}</h2memory.url>
						<h2memory.host>${h2memory.host}</h2memory.host>
						<h2memory.port>${h2memory.port}</h2memory.port>
						<h2memory.instance>${h2memory.instance}</h2memory.instance>
						<h2memory.username>${h2memory.username}</h2memory.username>
						<h2memory.password>${h2memory.password}</h2memory.password>
						<h2memory.schema>${h2memory.schema}</h2memory.schema>
						<h2memory.extras>${h2memory.extras}</h2memory.extras>
                        
						<h2shared.url>${h2shared.url}</h2shared.url>
						<h2shared.host>${h2shared.host}</h2shared.host>
						<h2shared.port>${h2shared.port}</h2shared.port>
						<h2shared.instance>${h2shared.instance}</h2shared.instance>
						<h2shared.database>${h2shared.database}</h2shared.database>
						<h2shared.username>${h2shared.username}</h2shared.username>
						<h2shared.password>${h2shared.password}</h2shared.password>
						<h2shared.schema>${h2shared.schema}</h2shared.schema>
						<h2shared.extras>${h2shared.extras}</h2shared.extras>
                        
						<mysql.url>${mysql.url}</mysql.url>
						<mysql.host>${mysql.host}</mysql.host>
						<mysql.port>${mysql.port}</mysql.port>
						<mysql.instance>${mysql.instance}</mysql.instance>
						<mysql.database>${mysql.database}</mysql.database>
						<mysql.username>${mysql.username}</mysql.username>
						<mysql.password>${mysql.password}</mysql.password>
						<mysql.schema>${mysql.schema}</mysql.schema>
						<mysql.extras>${mysql.extras}</mysql.extras>
                                                
						<mysql56.url>${mysql56.url}</mysql56.url>
						<mysql56.host>${mysql56.host}</mysql56.host>
						<mysql56.port>${mysql56.port}</mysql56.port>
						<mysql56.database>${mysql56.database}</mysql56.database>
						<mysql56.instance>${mysql56.instance}</mysql56.instance>
						<mysql56.username>${mysql56.username}</mysql56.username>
						<mysql56.password>${mysql56.password}</mysql56.password>
						<mysql56.schema>${mysql56.schema}</mysql56.schema>
						<mysql56.extras>${mysql56.extras}</mysql56.extras>
                        
						<oraclexe.url>${oraclexe.url}</oraclexe.url>
						<oraclexe.host>${oraclexe.host}</oraclexe.host>
						<oraclexe.port>${oraclexe.port}</oraclexe.port>
						<oraclexe.instance>${oraclexe.instance}</oraclexe.instance>
						<oraclexe.username>${oraclexe.username}</oraclexe.username>
						<oraclexe.password>${oraclexe.password}</oraclexe.password>
						<oraclexe.schema>${oraclexe.schema}</oraclexe.schema>
						<oraclexe.extras>${oraclexe.extras}</oraclexe.extras>
                        
						<sqlserver.url>${sqlserver.url}</sqlserver.url>
						<sqlserver.host>${sqlserver.host}</sqlserver.host>
						<sqlserver.port>${sqlserver.port}</sqlserver.port>
						<sqlserver.instance>${sqlserver.instance}</sqlserver.instance>
						<sqlserver.username>${sqlserver.username}</sqlserver.username>
						<sqlserver.password>${sqlserver.password}</sqlserver.password>
						<sqlserver.schema>${sqlserver.schema}</sqlserver.schema>
						<sqlserver.extras>${sqlserver.extras}</sqlserver.extras>
                        
						<sqlservermini.url>${sqlservermini.url}</sqlservermini.url>
						<sqlservermini.host>${sqlservermini.host}</sqlservermini.host>
						<sqlservermini.port>${sqlservermini.port}</sqlservermini.port>
						<sqlservermini.instance>${sqlservermini.instance}</sqlservermini.instance>
						<sqlservermini.username>${sqlservermini.username}</sqlservermini.username>
						<sqlservermini.password>${sqlservermini.password}</sqlservermini.password>
						<sqlservermini.schema>${sqlservermini.schema}</sqlservermini.schema>
						<sqlservermini.extras>${sqlservermini.extras}</sqlservermini.extras>

						<postgres.url>${postgres.url}</postgres.url>
						<postgres.host>${postgres.host}</postgres.host>
						<postgres.port>${postgres.port}</postgres.port>
						<postgres.database>${postgres.database}</postgres.database>
						<postgres.instance>${postgres.instance}</postgres.instance>
						<postgres.username>${postgres.username}</postgres.username>
						<postgres.password>${postgres.password}</postgres.password>
						<postgres.schema>${postgres.schema}</postgres.schema>
						<postgres.extras>${postgres.extras}</postgres.extras>
						
						<postgresfullcluster.url>${postgresfullcluster.url}</postgresfullcluster.url>
						<postgresfullcluster.host>${postgresfullcluster.host}</postgresfullcluster.host>
						<postgresfullcluster.port>${postgresfullcluster.port}</postgresfullcluster.port>
						<postgresfullcluster.database>${postgresfullcluster.database}</postgresfullcluster.database>
						<postgresfullcluster.instance>${postgresfullcluster.instance}</postgresfullcluster.instance>
						<postgresfullcluster.username>${postgresfullcluster.username}</postgresfullcluster.username>
						<postgresfullcluster.password>${postgresfullcluster.password}</postgresfullcluster.password>
						<postgresfullcluster.schema>${postgresfullcluster.schema}</postgresfullcluster.schema>
						<postgresfullcluster.extras>${postgresfullcluster.extras}</postgresfullcluster.extras>

					</systemPropertyVariables>
				</configuration>
			</plugin>       
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>shaded</shadedClassifierName> <!-- Any name that makes sense -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M3</version>
				 We're going to use Docker for integration testing so ensure you have it running 
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
								
						<testMSSQLServer>true</testMSSQLServer>
						 Use the docker-maven-plugin instance of MS SQLServer 
						<sqlserver.url></sqlserver.url>
						<sqlserver.host>localhost</sqlserver.host>
						<sqlserver.port>61433</sqlserver.port>
						<sqlserver.instance>MSSQLServer</sqlserver.instance>
						<sqlserver.database></sqlserver.database>
						<sqlserver.username>sa</sqlserver.username>
						<sqlserver.password>Password23</sqlserver.password>
						<sqlserver.schema></sqlserver.schema>
																
						<testPostgresSQL>true</testPostgresSQL>
						 Use the docker-maven-plugin instance of Postgres 
						<postgres.url></postgres.url>
						<postgres.host>localhost</postgres.host>
						<postgres.port>65432</postgres.port>
						<postgres.database>postgres</postgres.database>
						<postgres.instance>postgres</postgres.instance>
						<postgres.username>postgres</postgres.username>
						<postgres.password>dontusesomethingobvious</postgres.password>
						<postgres.schema></postgres.schema>
						
						<testMySQL>true</testMySQL>
						<mysql.url>${mysql.url}</mysql.url>
						<mysql.host>${mysql.host}</mysql.host>
						<mysql.port>${mysql.port}</mysql.port>
						<mysql.instance>${mysql.instance}</mysql.instance>
						<mysql.database>${mysql.database}</mysql.database>
						<mysql.username>${mysql.username}</mysql.username>
						<mysql.password>${mysql.password}</mysql.password>
						<mysql.schema>${mysql.schema}</mysql.schema>
						
						<testSQLite>true</testSQLite>
						<sqlite.url>${sqlite.url}</sqlite.url>
						<sqlite.filename>${sqlite.filename}</sqlite.filename>
						<sqlite.host />
						<sqlite.port />
						<sqlite.instance />
						<sqlite.username>${sqlite.username}</sqlite.username>
						<sqlite.password>${sqlite.password}</sqlite.password>
						<sqlite.schema />
																			
						<testH2DB>true</testH2DB>						
						<h2.url>${h2.url}</h2.url>
						<h2.host>${h2.host}</h2.host>
						<h2.port>${h2.port}</h2.port>
						<h2.instance>${h2.instance}</h2.instance>
						<h2.username>${h2.username}</h2.username>
						<h2.password>${h2.password}</h2.password>
						<h2.schema>${h2.schema}</h2.schema>
								
					</systemPropertyVariables>
					<includes>
						<include>**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.31.0</version>	
				 Connect start/stop to pre- and
				post-integration-test phase, respectively if you want to start
				your docker containers during integration tests 
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>volume-create</goal>
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
							<goal>remove</goal>
							<goal>volume-remove</goal>
						</goals>
					</execution>
				</executions>					
				<configuration>
					<showLogs>true</showLogs>
					<detail>true</detail>
					<verbose>true</verbose>
					<allContainers>true</allContainers>
					<startParallel>true</startParallel>
					
					<images>
						 MS SQLServer database instance 
						<image>
							<name>microsoft/mssql-server-linux:latest</name>
							<alias>sqlserver</alias>
							<run>
								<volumes>
									<bind>
										<name>./target:/MSSQLServer</name>
									</bind>
								</volumes>
								<ports>
									 host port is 61433 to avoid any actual installations of MS SQLServer 
									<port>61433:1433</port>
								</ports>
								 
								-e ACCEPT_EULA=Y accepts the agreement with MS and allows the database instance to start
								-e SA_PASSWORD=Password23 defines the password so we can login
								-e 'TZ=Pacific/Auckland' sets the container timezone to where I do my test (TODO set to server location)
								
								<env>
									<ACCEPT_EULA>Y</ACCEPT_EULA>
									<SA_PASSWORD>Password23</SA_PASSWORD>
									<TZ>Pacific/Auckland</TZ>
								</env>
								<wait>
									<time>120000</time>
									<log>.*SQL Server is now ready for client connections.*</log>
								</wait>
							</run>
						</image>
						
						
						 PostgresSQL image definition 
						<image>
							<name>mdillon/postgis:9.4</name>
							<alias>dbv-verify-postgres</alias>
							<run>
								<volumes>
									<bind>
										<name>./target:/PostgresSQL</name>
									</bind>
								</volumes>
								<ports>
									 host port is 65432 to avoid any actual installations of Postgres 
									<port>65432:5432</port>
								</ports>
								 
								-e POSTGRES_PASSWORD=mysecretpassword defines the password so we can login
								-e 'TZ=Pacific/Auckland' sets the container timezone to where I do my test (TODO set to server location)
								
								<env>
									<POSTGRES_PASSWORD>dontusesomethingobvious</POSTGRES_PASSWORD>
									<TZ>Pacific/Auckland</TZ>
									<POSTGIS_MAJOR>2.4</POSTGIS_MAJOR>
									<POSTGIS_VERSION>2.4.3+dfsg-2.pgdg90+1</POSTGIS_VERSION>
								</env>
																<cmd>
									<shell>apt-get update </shell>
									<shell>apt-get search postgis </shell>
									<shell>apt-get install -y DASHDASHno-install-recommends postgresql-11-postgis-2.5 postgresql-11-postgis-scripts
									</shell>
								</cmd>
								<wait>
									<time>600000</time> 10 minutes to handle downloading time 
									<log>.*database system is ready to accept connections.*</log>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>-->
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>release-profile</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.0.1</version>
						<configuration>
							<additionalOptions>-html5</additionalOptions>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadoc</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>     
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.8.2</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>DBs-Bundled</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testSQLite>true</testSQLite>
								<testH2DB>true</testH2DB>
								<testH2FileDB>true</testH2FileDB>
								<testH2DataSourceDB>true</testH2DataSourceDB>
								<testH2MemoryDB>true</testH2MemoryDB>
								<testH2BlankDB>true</testH2BlankDB>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Cluster-Bundled</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testBundledCluster>true</testBundledCluster>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Cluster-OpenSource</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testOpenSourceCluster>true</testOpenSourceCluster>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Cluster-Full</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testFullCluster>true</testFullCluster>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>DBs-OpenSource</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testSQLite>true</testSQLite>
								<testH2DB>true</testH2DB>
								<testH2FileDB>true</testH2FileDB>
								<testH2DataSourceDB>true</testH2DataSourceDB>
								<testH2MemoryDB>true</testH2MemoryDB>
								<testH2BlankDB>true</testH2BlankDB>
								<testMySQLContainer>true</testMySQLContainer>
								<testPostgres>true</testPostgres>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Full-Automated</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testSQLite>true</testSQLite>
								<testH2DB>true</testH2DB>
								<testH2FileDB>true</testH2FileDB>
								<testH2DataSourceDB>true</testH2DataSourceDB>
								<testH2MemoryDB>true</testH2MemoryDB>
								<testH2BlankDB>true</testH2BlankDB>
								<testMySQL>true</testMySQL>
								<testPostgres>true</testPostgres>
								<testBundledCluster>true</testBundledCluster>
								<testOpenSourceCluster>true</testOpenSourceCluster>
								<testFullCluster>true</testFullCluster>
								<testMSSQLServer>true</testMSSQLServer>
								<testOracleXE>true</testOracleXE>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>All-Containers</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testMySQLContainer>true</testMySQLContainer>
								<testPostgresContainer>true</testPostgresContainer>
								<testMSSQLServerContainer>true</testMSSQLServerContainer>
								<testOracleXEContainer>true</testOracleXEContainer>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>DBs-Proprietary</id>
			<build>
            
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testOracleXE>true</testOracleXE>
								<testMSSQLServer>true</testMSSQLServer>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>com.oracle.jdbc</groupId>
					<artifactId>ojdbc8</artifactId>
					<version>19.3.0.0</version>
				</dependency>
				<!-- https://mvnrepository.com/artifact/com.oracle/ojdbc6 -->
				<!--				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc6</artifactId>
					<version>12.1.0.1-atlassian-hosted</version>
					<scope>test</scope>
				</dependency>-->
			</dependencies>
		</profile>
		<profile>
			<id>DBs-Supported</id>
			<build>
            
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testSQLite>true</testSQLite>
								<testH2DB>true</testH2DB>
								<testH2FileDB>true</testH2FileDB>
								<testH2DataSourceDB>true</testH2DataSourceDB>
								<testH2MemoryDB>true</testH2MemoryDB>
								<testH2BlankDB>true</testH2BlankDB>
								<testPostgres>true</testPostgres>
								<!--<testPostgresContainer>true</testPostgresContainer>-->
								<testMySQL>true</testMySQL>
								<!--<testMySQLContainer>true</testMySQLContainer>-->
								<testOracleXE>true</testOracleXE>
								<testMSSQLServer>true</testMSSQLServer>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>com.oracle.jdbc</groupId>
					<artifactId>ojdbc8</artifactId>
					<version>19.3.0.0</version>
				</dependency>
				<!-- https://mvnrepository.com/artifact/com.oracle/ojdbc6 -->
				<!--				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc6</artifactId>
					<version>12.1.0.1-atlassian-hosted</version>
					<scope>test</scope>
				</dependency>-->
			</dependencies>
		</profile>
		<profile>
			<id>SQLiteTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testSQLite>true</testSQLite>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>OracleXETest</id>
			<dependencies>
				<dependency>
					<groupId>com.oracle.jdbc</groupId>
					<artifactId>ojdbc8</artifactId>
					<version>19.3.0.0</version>
				</dependency>
<!--				<dependency>
					<groupId>com.oracle.jdbc</groupId>
					<artifactId>ojdbc8</artifactId>
					<version>19.3.0.0</version>
				</dependency>-->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testOracleXE>true</testOracleXE>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>OracleXEContainerTest</id>
			<dependencies>
				<dependency>
					<groupId>com.oracle.jdbc</groupId>
					<artifactId>ojdbc8</artifactId>
					<version>19.3.0.0</version>
				</dependency>
				<!--				<dependency>
					<groupId>com.oracle.jdbc</groupId>
					<artifactId>ojdbc8</artifactId>
					<version>19.3.0.0</version>
				</dependency>-->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testOracleXEContainer>true</testOracleXEContainer>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>MSSQLServerTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testMSSQLServerLocal>true</testMSSQLServerLocal>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>MSSQLServerContainerTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testMSSQLServerContainer>true</testMSSQLServerContainer>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>H2DBTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testH2DB>true</testH2DB>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>H2SharedDBTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testH2SharedDB>true</testH2SharedDB>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>H2DBFileTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testH2FileDB>true</testH2FileDB>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>H2DBBlankTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testH2BlankDB>true</testH2BlankDB>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>H2MemoryDBTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testH2MemoryDB>true</testH2MemoryDB>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>H2DataSourceDBTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testH2DataSourceDB>true</testH2DataSourceDB>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>MySQLTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testMySQL>true</testMySQL>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>MySQLContainerTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testMySQLContainer>true</testMySQLContainer>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>MySQL56Test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testMySQL56>true</testMySQL56>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>PostgresTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testPostgresSQL>true</testPostgresSQL>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>PostgresContainerTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testPostgresContainer>true</testPostgresContainer>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>NuoTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<systemPropertyVariables>
								<testNuo>true</testNuo>
							</systemPropertyVariables>
							<includes>
								<include>**/*.java</include>
							</includes>
							<threadCount>1</threadCount>
							<forkCount>1</forkCount>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
  
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>hamcrest-core</artifactId>
					<groupId>org.hamcrest</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.49</version>
			<scope>compile</scope>
		</dependency>		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.200</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.tedhi</groupId>
			<artifactId>tedhi</artifactId>
			<version>0.9</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-mxj</artifactId>
			<version>5.0.12</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.5.jre7</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.9.11</version>
			<type>jar</type> 
			<exclusions>
				<exclusion>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
			<classifier>api</classifier>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
			<classifier>adapters</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>nz.co.gregs</groupId>
			<artifactId>dbvolution-eclipse</artifactId>
			<version>3.8.3.3</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-visualization</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.25.2</version>
			<scope>compile</scope>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.11</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>com.nuodb.jdbc</groupId>
			<artifactId>nuodb-jdbc</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.11.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.11.1.1</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>com.vividsolutions</groupId>
			<artifactId>jts</artifactId>
			<version>1.13</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10.1</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>com.github.mpkorstanje</groupId>
			<artifactId>simmetrics-core</artifactId>
			<version>4.1.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>7.2.2.jre8</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
			<version>3.0.1u2</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>2.12.4</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.12.4</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<version>0.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-crypto</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>net.openhft</groupId>
			<artifactId>compiler</artifactId>
			<version>2.3.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.28</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<version>19.3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.15.1</version>
			<!--<version>1.12.3</version>-->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>oracle-xe</artifactId>
			<version>1.15.1</version>
			<!--<version>1.12.3</version>-->
			<scope>test</scope>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mssqlserver</artifactId>
			<version>1.15.1</version>
			<!--<version>1.12.3</version>-->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.15.1</version>
			<!--<version>1.12.3</version>-->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mysql</artifactId>
			<version>1.15.1</version>
			<scope>test</scope>
		</dependency>
<!--		<dependency>
			<groupId>com.oracle.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<version>19.3.0.0</version>
			<scope>test</scope>
		</dependency>-->
		<dependency>
			<groupId>com.oracle.jdbc</groupId>
			<artifactId>xdb6</artifactId>
			<version>18.3.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>nz.co.gregs</groupId>
			<artifactId>regexi</artifactId>
			<version>1.4.6</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>nz.co.gregs</groupId>
			<artifactId>separatedstring</artifactId>
			<version>1.2.1</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.burningwave</groupId>
			<artifactId>core</artifactId>
			<version>8.15.1</version>
			<type>jar</type>
		</dependency>
	</dependencies>
	<distributionManagement>
		<site>
			<id>dbv-website-reports</id>
			<url>ftp://www.gregs.co.nz/httpdocs/dbvolution/reports/</url>
		</site>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<name>Nexus Staging Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
			<!-- Sonatype JIRA ticket: https://issues.sonatype.org/browse/OSSRH-6397 -->
		</repository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>SourceForge</id>
			<url>http://csvjdbc.sourceforge.net/maven2</url>
		</repository>
		<repository>
			<id>Atlassian 3rd-Party</id>
			<url>https://maven.atlassian.com/3rdparty/</url>
		</repository>
		<repository>
			<id>maven.oracle.com</id>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<url>https://maven.oracle.com</url>
			<layout>default</layout>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>maven.oracle.com</id>
			<url>https://maven.oracle.com</url>
		</pluginRepository>
	</pluginRepositories>
</project>
